Problem:    e4
Rows:       15
Columns:    81 (81 integer, 81 binary)
Non-zeros:  194
Status:     INTEGER OPTIMAL
Objective:  cameras = 2 (MINimum)

   No.   Row name        Activity     Lower bound   Upper bound
------ ------------    ------------- ------------- -------------
     1 cameras                     2                             
     2 container_within_camera_range[1,2]
                                   1             1               
     3 container_within_camera_range[1,3]
                                   1             1               
     4 container_within_camera_range[1,4]
                                   1             1               
     5 container_within_camera_range[7,7]
                                   1             1               
     6 container_within_camera_range[9,9]
                                   1             1               
     7 container_within_camera_range[7,9]
                                   1             1               
     8 container_within_camera_range[9,7]
                                   1             1               
     9 camera_must_not_overlap_container[1,2]
                                   0            -0             = 
    10 camera_must_not_overlap_container[1,3]
                                   0            -0             = 
    11 camera_must_not_overlap_container[1,4]
                                   0            -0             = 
    12 camera_must_not_overlap_container[7,7]
                                   0            -0             = 
    13 camera_must_not_overlap_container[9,9]
                                   0            -0             = 
    14 camera_must_not_overlap_container[7,9]
                                   0            -0             = 
    15 camera_must_not_overlap_container[9,7]
                                   0            -0             = 

   No. Column name       Activity     Lower bound   Upper bound
------ ------------    ------------- ------------- -------------
     1 grid[1,1]    *              0             0             1 
     2 grid[1,2]    *              0             0             1 
     3 grid[1,3]    *              0             0             1 
     4 grid[1,4]    *              0             0             1 
     5 grid[1,5]    *              0             0             1 
     6 grid[1,6]    *              0             0             1 
     7 grid[1,7]    *              0             0             1 
     8 grid[1,8]    *              0             0             1 
     9 grid[1,9]    *              0             0             1 
    10 grid[2,1]    *              0             0             1 
    11 grid[2,2]    *              1             0             1 
    12 grid[2,3]    *              0             0             1 
    13 grid[2,4]    *              0             0             1 
    14 grid[2,5]    *              0             0             1 
    15 grid[2,6]    *              0             0             1 
    16 grid[2,7]    *              0             0             1 
    17 grid[2,8]    *              0             0             1 
    18 grid[2,9]    *              0             0             1 
    19 grid[3,1]    *              0             0             1 
    20 grid[3,2]    *              0             0             1 
    21 grid[3,3]    *              0             0             1 
    22 grid[3,4]    *              0             0             1 
    23 grid[3,5]    *              0             0             1 
    24 grid[3,6]    *              0             0             1 
    25 grid[3,7]    *              0             0             1 
    26 grid[3,8]    *              0             0             1 
    27 grid[3,9]    *              0             0             1 
    28 grid[4,1]    *              0             0             1 
    29 grid[4,2]    *              0             0             1 
    30 grid[4,3]    *              0             0             1 
    31 grid[4,4]    *              0             0             1 
    32 grid[4,5]    *              0             0             1 
    33 grid[4,6]    *              0             0             1 
    34 grid[4,7]    *              0             0             1 
    35 grid[4,8]    *              0             0             1 
    36 grid[4,9]    *              0             0             1 
    37 grid[5,1]    *              0             0             1 
    38 grid[5,2]    *              0             0             1 
    39 grid[5,3]    *              0             0             1 
    40 grid[5,4]    *              0             0             1 
    41 grid[5,5]    *              0             0             1 
    42 grid[5,6]    *              0             0             1 
    43 grid[5,7]    *              0             0             1 
    44 grid[5,8]    *              0             0             1 
    45 grid[5,9]    *              0             0             1 
    46 grid[6,1]    *              0             0             1 
    47 grid[6,2]    *              0             0             1 
    48 grid[6,3]    *              0             0             1 
    49 grid[6,4]    *              0             0             1 
    50 grid[6,5]    *              0             0             1 
    51 grid[6,6]    *              0             0             1 
    52 grid[6,7]    *              0             0             1 
    53 grid[6,8]    *              0             0             1 
    54 grid[6,9]    *              0             0             1 
    55 grid[7,1]    *              0             0             1 
    56 grid[7,2]    *              0             0             1 
    57 grid[7,3]    *              0             0             1 
    58 grid[7,4]    *              0             0             1 
    59 grid[7,5]    *              0             0             1 
    60 grid[7,6]    *              0             0             1 
    61 grid[7,7]    *              0             0             1 
    62 grid[7,8]    *              1             0             1 
    63 grid[7,9]    *              0             0             1 
    64 grid[8,1]    *              0             0             1 
    65 grid[8,2]    *              0             0             1 
    66 grid[8,3]    *              0             0             1 
    67 grid[8,4]    *              0             0             1 
    68 grid[8,5]    *              0             0             1 
    69 grid[8,6]    *              0             0             1 
    70 grid[8,7]    *              0             0             1 
    71 grid[8,8]    *              0             0             1 
    72 grid[8,9]    *              0             0             1 
    73 grid[9,1]    *              0             0             1 
    74 grid[9,2]    *              0             0             1 
    75 grid[9,3]    *              0             0             1 
    76 grid[9,4]    *              0             0             1 
    77 grid[9,5]    *              0             0             1 
    78 grid[9,6]    *              0             0             1 
    79 grid[9,7]    *              0             0             1 
    80 grid[9,8]    *              0             0             1 
    81 grid[9,9]    *              0             0             1 

Integer feasibility conditions:

KKT.PE: max.abs.err = 0.00e+00 on row 0
        max.rel.err = 0.00e+00 on row 0
        High quality

KKT.PB: max.abs.err = 0.00e+00 on row 0
        max.rel.err = 0.00e+00 on row 0
        High quality

End of output
